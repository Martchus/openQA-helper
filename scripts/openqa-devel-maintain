#!/bin/bash
set -e

if ! [[ -d $OPENQA_BASEDIR ]]; then
    echo 'Please set $OPENQA_BASEDIR to a valid directory.'
    exit 1
fi

cd "$OPENQA_BASEDIR/repos"

function update_repo() {
    local repo_path=$1
    pushd "$repo_path"

    # get current branch
    local branch_name=$(git symbolic-ref -q HEAD)
    local branch_name=${branch_name##refs/heads/}
    local branch_name=${branch_name:-DETACHED}

    # get new stuff from everywhere
    git remote update

    # get in clean state, we should never have any commits on local master anyways
    [[ $branch_name == master || $branch_name == DETACHED ]] && git reset --hard origin/master

    # re-configure build and rebuild executables
    local repo_name=${repo_path##*/}
    if [[ $repo_name  == 'os-autoinst' ]]; then
        local src_dir=$PWD
        local build_dir=$OPENQA_BASEDIR/build/${repo_name}${OS_AUTOINST_CONFIG:--ninja}
        mkdir -p "$build_dir"
        pushd "$build_dir"
        if [[ -f CMakeCache.txt ]]; then
            # do not override any settings by default if CMake has already been invoked (manually)
            cmake ${OS_AUTOINST_CMAKE_ARGS} .
        else
            cmake ${OS_AUTOINST_CMAKE_INIT_ARGS:--G Ninja -DCMAKE_BUILD_TYPE=Debug} "$src_dir"
        fi
        local make_tool=make
        if [[ -f build.ninja ]]; then
            make_tool=ninja
        fi
        "$make_tool" -j$(nproc) symlinks
        popd
    fi
    
    popd
}

echo "==> INFO: Updating openQA"
update_repo "$OPENQA_BASEDIR/repos/openQA"

echo "==> INFO: Updating os-autoinst"
update_repo "$OPENQA_BASEDIR/repos/os-autoinst"
update_repo "$OPENQA_BASEDIR/repos/os-autoinst-clean"

declare -A products_by_distro=(
    [opensuse]="opensuse sle"
    [openqa]="openQA"
    [obs]=""
)
for test_distro in "${!products_by_distro[@]}"; do
    tests_dir=$OPENQA_BASEDIR/openqa/share/tests/$test_distro
    if [[ ! -d $tests_dir ]]; then
        echo "==> WARNING: Skipping test distribution $test_distro because \"$tests_dir\" does not exist."
        continue
    fi
    echo "==> INFO: Updating test distribution $test_distro"
    update_repo "$tests_dir"

    for product in ${products_by_distro[$test_distro]}; do
        product_dir=$OPENQA_BASEDIR/openqa/share/tests/$test_distro/products/$product/needles
        if [[ ! -d $product_dir ]]; then
            echo "==> WARNING: Skipping product $product because \"$product_dir\" does not exist."
            continue
        fi
        echo "==> INFO: Updating needle dir for product $product (belongs to distro $test_distro)"
        update_repo "$product_dir"
    done
done
