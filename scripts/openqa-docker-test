#!/bin/bash
cd "$OPENQA_BASEDIR/repos/openQA"
CONTAINER_NAME=${CONTAINER_NAME:-openqa-testsuite}
OPENQA_PATH=${OPENQA_PATH:-$OPENQA_BASEDIR/repos/openQA}
OS_AUTOINST_PATH=${OS_AUTOINST_PATH:-$OPENQA_BASEDIR/repos/os-autoinst-clean}

# read docker options and test command
docker_options=()
test_command=()
read=docker_options
for arg in "$@"; do
    if [[ $arg == -- ]]; then
        read=test_command
    else
        if [[ $read == docker_options ]]; then
            docker_options+=("$arg")
        elif [[ $read == test_command ]]; then
            test_command+=("$arg")
        fi
    fi
done

# set default test command
[[ $test_command ]] || test_command=(make run-tests-within-container)

# keep a bash open so we can investigate failures easier
test_command+=(';' 'bash')

# use host X
XSOCK=/tmp/.X11-unix:/tmp/.X11-unix:rw
XAUTH=/tmp/.docker.xauth
xauth nlist :0 | sed -e 's/^..../ffff/' | xauth -f $XAUTH nmerge -
xhost +local:root

# note: use a clean copy of os-autoinst here since my regular checkout usually contains binaries linked against
#       libraries as provided by Tumbleweed which might not be compatible with the libs found in the Docker container

for cmd in echo ''; do
    $cmd docker run \
        --rm -ti \
        --name "$CONTAINER_NAME" \
        -v "$XSOCK" -v "$XAUTH" -e XAUTHORITY="$XAUTH" -e DISPLAY="$DISPLAY" --device /dev/dri --device /dev/snd \
        -v "$OPENQA_PATH:/opt/openqa" \
        -v "$OS_AUTOINST_PATH:/opt/os-autoinst" \
        -e PERL5LIB=lib \
        "${docker_options[@]}" openqa:latest "${test_command[@]}"
done

xhost -local:root
